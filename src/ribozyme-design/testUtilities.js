var AlgorithmUtilities = require('./AlgorithmUtilities.js');

var conpairs = AlgorithmUtilities.convertSeqStructToIndexStruct(
    'GGAGCCGUUCGGGCGGCUAUAAACANNNNUCAGGCCCGAAGCGNNNNNNNNNNNNNNNNNNN',
    '..((((..[[[[[.))))................]]]]].......................');

var expectedResult = 
[ { left: 1, right: -1, type: 'G' },
  { left: 2, right: -1, type: 'G' },
  { left: 3, right: 18, type: 'A' },
  { left: 4, right: 17, type: 'G' },
  { left: 5, right: 16, type: 'C' },
  { left: 6, right: 15, type: 'C' },
  { left: 7, right: -1, type: 'G' },
  { left: 8, right: -1, type: 'U' },
  { left: 9, right: 39, type: 'U' },
  { left: 10, right: 38, type: 'C' },
  { left: 11, right: 37, type: 'G' },
  { left: 12, right: 36, type: 'G' },
  { left: 13, right: 35, type: 'G' },
  { left: 14, right: -1, type: 'C' },
  { left: 15, right: 6, type: 'G' },
  { left: 16, right: 5, type: 'G' },
  { left: 17, right: 4, type: 'C' },
  { left: 18, right: 3, type: 'U' },
  { left: 19, right: -1, type: 'A' },
  { left: 20, right: -1, type: 'U' },
  { left: 21, right: -1, type: 'A' },
  { left: 22, right: -1, type: 'A' },
  { left: 23, right: -1, type: 'A' },
  { left: 24, right: -1, type: 'C' },
  { left: 25, right: -1, type: 'A' },
  { left: 26, right: -1, type: 'N' },
  { left: 27, right: -1, type: 'N' },
  { left: 28, right: -1, type: 'N' },
  { left: 29, right: -1, type: 'N' },
  { left: 30, right: -1, type: 'U' },
  { left: 31, right: -1, type: 'C' },
  { left: 32, right: -1, type: 'A' },
  { left: 33, right: -1, type: 'G' },
  { left: 34, right: -1, type: 'G' },
  { left: 35, right: 13, type: 'C' },
  { left: 36, right: 12, type: 'C' },
  { left: 37, right: 11, type: 'C' },
  { left: 38, right: 10, type: 'G' },
  { left: 39, right: 9, type: 'A' },
  { left: 40, right: -1, type: 'A' },
  { left: 41, right: -1, type: 'G' },
  { left: 42, right: -1, type: 'C' },
  { left: 43, right: -1, type: 'G' },
  { left: 44, right: -1, type: 'N' },
  { left: 45, right: -1, type: 'N' },
  { left: 46, right: -1, type: 'N' },
  { left: 47, right: -1, type: 'N' },
  { left: 48, right: -1, type: 'N' },
  { left: 49, right: -1, type: 'N' },
  { left: 50, right: -1, type: 'N' },
  { left: 51, right: -1, type: 'N' },
  { left: 52, right: -1, type: 'N' },
  { left: 53, right: -1, type: 'N' },
  { left: 54, right: -1, type: 'N' },
  { left: 55, right: -1, type: 'N' },
  { left: 56, right: -1, type: 'N' },
  { left: 57, right: -1, type: 'N' },
  { left: 58, right: -1, type: 'N' },
  { left: 59, right: -1, type: 'N' },
  { left: 60, right: -1, type: 'N' },
  { left: 61, right: -1, type: 'N' },
  { left: 62, right: -1, type: 'N' } ];

if(conpairs.join == expectedResult.join){
    console.log('Pass');
} else {
    console.log('Fail');
}